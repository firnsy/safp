#!/usr/bin/perl
#
#


use warnings;
use strict;

use 5.010;

use lib './lib';

#
# PERL INCLUDES
#
use AnyEvent;
use Carp;
use Data::Dumper;
use Fcntl qw(SEEK_SET SEEK_CUR SEEK_END O_RDONLY O_WRONLY O_CREAT O_EXCL O_TRUNC);
use JSON;
use YAML::Tiny;

#
# SAFP INCLUDES
#
use SAFP::Watcher;
use SAFP::Writer;

#
# GLOBALS
#

my $bookmarks = {};
my $config    = {};
my $watchers  = [];
my $writers   = [];

#
# MAIN
#

# read config

if( @ARGV && -r $ARGV[0] ) {
  # only using the first section
  $config = YAML::Tiny->read($ARGV[0])->[0];
}

#
# validate config
if( ! @{ $config->{watchers} } ) {
  say("No watchers are configured.");
  exit(1);
}

if( ! @{ $config->{writers} } ) {
  say("No writers are configured.");
  exit(1);
}

# TODO: some initial defaults to be replaced with optional and mandatory
# config checking later on

$config->{listener} //= [];
$config->{sender} //= [];

$config->{cache}{type}     //= "cache";
$config->{cache}{separate} //= 0;
$config->{cache}{path}     //= '/tmp';

$config->{cache}{bookmark_path} = $config->{cache}{dir} . '/.bookmarks';

# load the bookmarks
if( -r $config->{cache}{bookmark_path} ) {
  say "Loading bookmarks ...";

  local $/ = undef;

  croak("Unable to open bookmark file: " . $config->{cache}{bookmark_path}) if( ! (open( BOOKMARK, '<', $config->{cache}{bookmark_path}) ) );

  my $b = <BOOKMARK>;
  $bookmarks = JSON->new->utf8->decode($b);

  close(BOOKMARK);
}


#
# build the writers 
say "Building writer(s) ...";

foreach my $s ( @{ $config->{writers} } ) {
  continue if( ! defined($s->{type}) );

  my $writer = SAFP::Writer->new($s, $config->{cache}, $bookmarks);

  push( @{ $writers }, $writer );
}

#
# build the cache
say "Building cache ...";

# setup cache directory
if( ! -d -w -r $config->{cache}{path} ) {
  say("Cache directory does not exist or is not readable/writable: " . $config->{cache}{path});
  exit(1);
}

my $cache_writer = SAFP::Writer->new($config->{cache});

#
# build the watchers
say "Building watcher(s) ...";

sub reading {
  my $reader = shift;
  my $data = shift;

  # cache information
  $cache_writer->write($data);

}

foreach my $l ( @{ $config->{watchers} } ) {
  continue if( ! defined($l->{type}) );

  my $watcher = SAFP::Watcher->new($l);

  $watcher->add_bookmark_store( $bookmarks );
  $watcher->add_reader( \&reading );

  push( @{ $watchers }, $watcher );
}

#
# setup the signal handlers
my $exit_cv = AE::cv;

my $quit = sub {
  $exit_cv->send();
};

my $cv_term = AE::signal TERM => $quit;
my $cv_hup  = AE::signal HUP  => $quit;
my $cv_int  = AE::signal INT  => $quit;

#
# start the event loop
say "Initialised.";

$exit_cv->recv();

#
# cleanup, saving bookmarks on exit
say "\nSaving the bookmark.";

say Dumper($bookmarks);

{
  my $bookmark_h;

  croak("Unable to open bookmark file: " . $config->{cache}{bookmark_path}) if( ! (open( BOOKMARK, '>', $config->{cache}{bookmark_path}) ) );

  my $b = JSON->new->utf8->encode($bookmarks) . "\n";

  print BOOKMARK $b;

  close(BOOKMARK);
}


exit 0;
